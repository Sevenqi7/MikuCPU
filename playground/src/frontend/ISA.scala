package miku.frontend

import chisel3._
import chisel3.util._

import miku._

object SrcType {
    def reg = "b00".U
    def pc  = "b01".U
    def imm = "b10".U

    def X = BitPat("b??".U)

    def apply() = UInt(2.W)
}

// Function Unit Type
object FuType {
    def num = 5

    def alu = "b000".U
    def lsu = "b001".U
    def mul = "b010".U
    def div = "b011".U
    def jmp = "b100".U

    def X = BitPat("b???".U)

    def apply() = UInt(log2Up(num).W)
}

object ALUOpType {
    def X = BitPat("b??".U)
}

object JumpOpType {
    def X = BitPat("b??".U)
}

object LSUOpType {
    def X = BitPat("b??".U)
}

object LA32Instructions {
    //3R-Type
    def ADDW    = BitPat("b00000 00000 01000 00 ????? ????? ?????")
    def SUBW    = BitPat("b00000 00000 01000 10 ????? ????? ?????")
    def SLT     = BitPat("b00000 00000 01001 00 ????? ????? ?????")
    def SLTU    = BitPat("b00000 00000 01001 01 ????? ????? ?????")
    def NOR     = BitPat("b00000 00000 01010 00 ????? ????? ?????")
    def AND     = BitPat("b00000 00000 01010 01 ????? ????? ?????")
    def OR      = BitPat("b00000 00000 01010 10 ????? ????? ?????")
    def XOR     = BitPat("b00000 00000 01010 11 ????? ????? ?????")
    def SLLW    = BitPat("b00000 00000 01011 10 ????? ????? ?????")
    def SRLW    = BitPat("b00000 00000 01011 11 ????? ????? ?????")
    def SRAW    = BitPat("b00000 00000 01100 00 ????? ????? ?????")
    def MULW    = BitPat("b00000 00000 01110 00 ????? ????? ?????")
    def MULHW   = BitPat("b00000 00000 01110 01 ????? ????? ?????")
    def MULHWU  = BitPat("b00000 00000 01110 10 ????? ????? ?????")
    def DIVW    = BitPat("b00000 00000 10000 00 ????? ????? ?????")
    def MODW    = BitPat("b00000 00000 10000 01 ????? ????? ?????")
    def DIVWU   = BitPat("b00000 00000 10000 10 ????? ????? ?????")
    def MODWU   = BitPat("b00000 00000 10000 11 ????? ????? ?????")
    // special
    def BREAK   = BitPat("b00000 00000 10101 00 ????? ????? ?????")
    def SYSCALL = BitPat("b00000 00000 10101 10 ????? ????? ?????")
    
    def SLLIW   = BitPat("b00000 00001 00000 01 ????? ????? ?????")
    def SRLIW   = BitPat("b00000 00001 00010 01 ????? ????? ?????")
    def SRAIW   = BitPat("b00000 00001 00100 01 ????? ????? ?????")
    
    //! fpu is not supported yet

    // 2RI12-Type
    def SLTI    = BitPat("b00000 01000 ????? ?? ????? ????? ?????")
    def SLTUI   = BitPat("b00000 01001 ????? ?? ????? ????? ?????")
    def ADDIW   = BitPat("b00000 01010 ????? ?? ????? ????? ?????")
    def ANDI    = BitPat("b00000 01101 ????? ?? ????? ????? ?????")
    def ORI     = BitPat("b00000 01110 ????? ?? ????? ????? ?????")
    def XORI    = BitPat("b00000 01111 ????? ?? ????? ????? ?????")
    def LDB     = BitPat("b00101 00000 ????? ?? ????? ????? ?????")
    def LDH     = BitPat("b00101 00001 ????? ?? ????? ????? ?????")
    def LDW     = BitPat("b00101 00010 ????? ?? ????? ????? ?????")
    def STB     = BitPat("b00101 00100 ????? ?? ????? ????? ?????")
    def STH     = BitPat("b00101 00101 ????? ?? ????? ????? ?????")
    def STW     = BitPat("b00101 00110 ????? ?? ????? ????? ?????")
    def LDBU    = BitPat("b00101 01000 ????? ?? ????? ????? ?????")
    def LDHU    = BitPat("b00101 01001 ????? ?? ????? ????? ?????")

    //! CSR is not supported yet

    //! TLB is not supported yet

    //2RI16-Type
    def BCECQZ  = BitPat("b01001 0???? ????? ?? ????? 00??? ?????")
    def BCENEZ  = BitPat("b01001 0???? ????? ?? ????? 01??? ?????")
    def JIRL    = BitPat("b01001 1???? ????? ?? ????? ????? ?????")
    def B       = BitPat("b01010 0???? ????? ?? ????? ????? ?????")
    def BL      = BitPat("b01010 1???? ????? ?? ????? ????? ?????")
    def BEQ     = BitPat("b01011 0???? ????? ?? ????? ????? ?????")
    def BNE     = BitPat("b01011 1???? ????? ?? ????? ????? ?????")
    def BLT     = BitPat("b01100 0???? ????? ?? ????? ????? ?????")
    def BGE     = BitPat("b01100 1???? ????? ?? ????? ????? ?????")
    def BLTU    = BitPat("b01101 0???? ????? ?? ????? ????? ?????")
    def BGEU    = BitPat("b01101 1???? ????? ?? ????? ????? ?????")
}